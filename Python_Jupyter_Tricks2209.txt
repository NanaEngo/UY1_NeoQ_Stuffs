I. INSTALLING MINICONDA AND SOME TRICKS (LINUX - through the terminal)

1. Install Miniconda 
1.1 Download the file (~90 MB)
$ wget -c https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh

1.2 Install (inside the directory where your previously download file is, right click and choose "open in terminal") 
$ bash Miniconda3-latest-Linux-x86_64.sh

Validate the licence and choose "yes" anytime. At the end close the terminal and open it again. 
You should see "$(base)"

1.3 Add conda-forge channel (this channel is very important for us)
$(base) conda config --add channels conda-forge

1.4 Update conda
$(base) conda update conda -y

1.5 Install mamba (which is more powerfull and efficient than conda)
$(base) conda install mamba -y
$(base) mamba init

2. Install some main packages on the "(base)"
$(base) mamba install jupyterlab ipykernel nb_conda_kernels

This would install jupyterlab and jupyter notebook. My advice is to use jupyterlab which is modern and powerfull. 
"ipykernel" is necessary to the use of one jupyter (lab or notebook) with various kernels or environments 


II. CHANGING WORKING DIRECTORY UNDER LINUX

1. First you need to create the config file 
$(base) jupyter notebook --generate-config 

2. View the config file at: ~/.jupyter/jupyter_notebook_config.py

3.Then, Ctrl+F: # c.NotebookApp.notebook_dir ='' . 
Change the line: 
c.NotebookApp.notebook_dir = '' to
c.NotebookApp.notebook_dir = '/path/to/desired/startup/directory'

For example
c.NotebookApp.notebook_dir = '/media/taamangtchu/MYDATA/Workplace/'

Make sure to remove #, as it is as comment.
Ctrl+S to save the config.py file !!!

{
For those using jupyterlab as me:
$(base) Jupyter lab --generate-config

~/.jupyter/jupyter_lab_config.py

c.ServerApp.root_dir = ''
}


III. ENABLING  "jupyter nbextension"

$(base) jupyter nbextension enable --py --sys-prefix widgetsnbextension
 
{
For those using jupyterlab as me, nbextension are enabling graphically inside jupyterlab
}
 
IV. CREATE CONDA ENVIRONMENTS

1. To create an environment
$(base) mamba (or conda) create --name myenv -y

For example, to create an qiskit environment
$(base) mamba (or conda) create --name qiskit-env -y

To create an environment with a specific version of Python:
$(base) mamba (or conda) create -n myenv python=3.9

2. To verify that the environment was created
$(base) mamba (or conda) info --envs
or
$(base) mamba (or conda) env list

A list similar to the following is displayed

$(base) conda environments:
myenv                 /home/username/miniconda/envs/myenv
snowflakes            /home/username/miniconda/envs/snowflakes
bunnies               /home/username/miniconda/envs/bunnies


3. To activate an environment
$(base) mamba (or conda) activate myenv
 which give
$(myenv)

4. To activate an environment
$(base) mamba (or conda) activate myenv
 which give
$(myenv)

5. To deactivate an environment
$(myenv) mamba (or conda) deactivate 
 which give
$(base)


V. ADDING PYTHON MULTIKERNELS TO CONDA ENVIRONMENTS TO BE OPEN WITH JUPYTER

1. Install the required packages (if there not installed during the steps I.)
$(base) mamba (or conda) install ipykernel nb_conda_kernels -y

2. In each conda environments, including "base", execute
$ ipython kernel install --user

For example
$(base) ipython kernel install --user
$(base) conda activate qiskit-env
$(qiskit-env) ipython kernel install --user
